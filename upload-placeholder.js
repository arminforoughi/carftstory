const admin = require('firebase-admin');
const fs = require('fs');
const path = require('path');
const os = require('os');

// Initialize Firebase Admin SDK with storage bucket
const serviceAccount = require('./storycraft-71f24-firebase-adminsdk-fbsvc-52ccf36b6b.json');
admin.initializeApp({
  credential: admin.credential.cert(serviceAccount),
  storageBucket: 'storycraft-71f24.appspot.com'
});

// Create a placeholder image if it doesn't exist
const tempDir = path.join(os.tmpdir());
const placeholderPath = path.join(tempDir, 'placeholder.jpg');

// This is a minimal valid JPG file
const minimalJpg = Buffer.from([
  0xff, 0xd8, 0xff, 0xe0, 0x00, 0x10, 0x4a, 0x46, 0x49, 0x46, 0x00, 0x01, 0x01, 0x01, 0x00, 0x48,
  0x00, 0x48, 0x00, 0x00, 0xff, 0xdb, 0x00, 0x43, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x0b, 0x08, 0x00, 0x01, 0x00,
  0x01, 0x01, 0x01, 0x11, 0x00, 0xff, 0xc4, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xda, 0x00, 0x08, 0x01,
  0x01, 0x00, 0x00, 0x3f, 0x00, 0x37, 0xff, 0xd9
]);

fs.writeFileSync(placeholderPath, minimalJpg);
console.log('Created placeholder image at', placeholderPath);

// Upload placeholder to Firebase Storage
const bucket = admin.storage().bucket();
bucket.upload(placeholderPath, {
  destination: 'images/placeholder.jpg',
  metadata: {
    contentType: 'image/jpeg',
    cacheControl: 'public, max-age=31536000',
  }
}).then(() => {
  console.log('Placeholder image uploaded to Firebase Storage');
  
  // Get a signed URL for the uploaded image
  return bucket.file('images/placeholder.jpg').getSignedUrl({
    action: 'read',
    expires: '03-01-2500', // Far future expiration
  });
}).then(([signedUrl]) => {
  console.log('Placeholder image URL:', signedUrl);
  process.exit(0);
}).catch(err => {
  console.error('Error uploading placeholder image:', err);
  process.exit(1);
}); 